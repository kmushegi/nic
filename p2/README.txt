Neighborhood Topologies in PSO
Project 2
Marcus Christiansen
Ernesto Garcia
Konstantine Mushegian
March 14, 2017

----------------------------------------

Our final report is 'comparison-neighborhood-topologies.pdf'

-----------------------------------------

The code in this repository contains an implementation of the PSO algorithm,
along with the implementation of 4 topologies:
	* Global
	* Ring
	* Von Neumann
	* Random

The implementation is located in PSOTopologies.java. The particle class
is defined in Particle.java

The software allows and requires certain parameters for successful execution; the
format and ordering of parameters is specified below.

**** Default ****
java PSOTopologies topology number-of-particles eval-func

**** Custom ****
java PSOTopologies topology number-of-particles iterations eval-func dimensions

1. Topology
	- gl
	- ri
	- vn
	- ra
2. Number Of Particles
	- 16
	- 30
	- 49
3. Iterations
	- defaults to 10000
4. Evaluation Function
	- Rosenblock --> rok
	- Ackley --> ack
	- Rastrigin --> ras

***** ALTERNATIVELY *****

You can use the included Makefile so that you don't have to keep running an
extremely long command. You can change the parameters in the Makefile.

PSO
-----------------------------------------
make run-default or make run-custom

***** MASS TESTING *****

If you want to run all possible combinations of topologies, number of particles,
and evaluation functions you can use the included Python script: auto-test.py

The output will be written to the "stats" folder.

First, comment out lines 71, 72, 83, 84, & 85, and comment in 87-89.

To run the script type 'python auto-test.py' into the terminal

Undo previous commenting after testing to return terminal output to original output.

***** DATA ANALYSIS *****

The script in process-data.py will analyze the .txt files generated by auto-test.py 
and spit out statistics on which set of parameters resulted in tge fastest average 
runtime and least average value.

python process-data.py

The .txt files will be read from the statsdir variable specified in process.data.py
on line 4.



